name: Build and Deploy to Cloud Functions

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: crypto-alert-421018
  BUCKET_NAME: crypto-alert-serverless-gcf-source
  GCS_LOCATION: us-east1

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      build_artifact: ${{ steps.compress.outputs.filename }}
      version: ${{ steps.package_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        id: package_version
        run: |
          PACKAGE_VERSION=$(cat package.json | jq -r '.version')
          echo "Current version: $PACKAGE_VERSION"
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Zip files
        id: compress
        run: |
          FILENAME=${{ steps.package_version.outputs.version }}.zip
          echo "Compressed file: '$FILENAME'"
          zip -r $FILENAME node_modules .yarnrc.yml dist package.json yarn.lock
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.compress.outputs.filename }}
          path: ${{ steps.compress.outputs.filename }}

  upload:
    name: Upload to GCP
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: 'read'
      id-token: 'write'

    outputs:
      source_path: ${{ steps.upload-file.outputs.uploaded }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 472.0.0'
      - name: Create GCloud Bucket if not exist
        run: |
          if gcloud storage buckets describe "gs://${{ env.BUCKET_NAME }}" &> /dev/null ; then
            echo "GCP Bucket gs://${{ env.BUCKET_NAME }} already exists"
          else
            echo "Creating GCP Bucket gs://${{ env.BUCKET_NAME }}"
            gcloud storage buckets create --location=us-east1 gs://${{ env.BUCKET_NAME }}
          fi
      - name: Download build
        id: download_build
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.build_artifact }}
      - name: debug
        run: |
          ls
          echo "${{ steps.download_build.outputs.download-path }}"
          ls ${{ steps.download_build.outputs.download-path }}
      - name: Upload build
        id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: ${{ steps.download_build.outputs.download-path }}/${{ needs.build.outputs.build_artifact }}
          destination: ${{ env.BUCKET_NAME }}

  deploy:
    runs-on: ubuntu-22.04
    needs:
      - upload
      - build
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      TF_VAR_source_filepath: ${{ needs.upload.outputs.source_path }}
      TF_VAR_region: us-east1
      TF_VAR_binance_api_url: https://data-api.binance.vision
      TF_VAR_mailjet_mail_to: elton.okawa@gmail.com,public.elton@gmail.com
      TF_VAR_mailjet_mail_from: e11even.robot@gmail.com
      TF_VAR_database_url: ${{ secrets.DATABASE_URL }}
      TF_VAR_discord_bot_token: ${{ secrets.DISCORD_BOT_TOKEN }}
      TF_VAR_discord_channel_id: ${{ secrets.DISCORD_CHANNEL_ID }}
      TF_VAR_mailjet_api_key: ${{ secrets.MAILJET_API_KEY }}
      TF_VAR_mailjet_secret_key: ${{ secrets.MAILJET_SECRET_KEY }}
    steps:
      - name: Debug source filepath
        run: echo '${{ needs.upload.outputs.source_path }}'
      - name: Checkout
        uses: actions/checkout@v4
      - name: Terraform init
        run: terraform init
      - name: Terraform plan
        run: terraform plan -out ${{ needs.build.outputs.version }}
      - name: Terraform apply
        run: terraform apply ${{ needs.build.outputs.version }}
