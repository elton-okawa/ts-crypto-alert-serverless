name: Build and Deploy to Cloud Functions

on:
  push:
    branches:
      - main
      - feat/terraform

env:
  PROJECT_ID: crypto-alert-421018
  BUCKET_NAME: crypto-alert-serverless-gcf-source
  GCS_LOCATION: us-east1
  REGION: us-east1

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build_artifact: ${{ steps.compress.outputs.filename }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        id: package_version
        run: |
          PACKAGE_VERSION=$(cat package.json | jq -r '.version')
          echo "Current version: $PACKAGE_VERSION"
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
      - name: Zip files
        id: compress
        run: |
          FILENAME=${{ steps.package_version.outputs.version }}.zip
          echo "Compressed file: '$FILENAME'"
          zip -r $FILENAME dist
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.compress.outputs.filename }}
          path: ${{ steps.compress.outputs.filename }}

  upload:
    name: Upload to GCP
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: 'read'
      id-token: 'write'

    outputs:
      source_path: ${{ steps.upload-file.outputs.uploaded }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 472.0.0'
      - name: Create GCloud Bucket if not exist
        run: |
          if gcloud storage buckets describe "gs://${{ env.BUCKET_NAME }}" &> /dev/null ; then
            echo "GCP Bucket gs://${{ env.BUCKET_NAME }} already exists"
          else
            echo "Creating GCP Bucket gs://${{ env.BUCKET_NAME }}"
            gcloud storage buckets create --location=us-east1 gs://${{ env.BUCKET_NAME }}
          fi
      - name: Download build
        id: download_build
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.build_artifact }}
      - name: debug
        run: |
          ls
          echo "${{ steps.download_build.outputs.download-path }}"
          ls ${{ steps.download_build.outputs.download-path }}
      - name: Upload build
        id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: ${{ steps.download_build.outputs.download-path }}/${{ needs.build.outputs.build_artifact }}
          destination: ${{ env.BUCKET_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Terraform login
        run: |
          export TF_TOKEN=${{ secrets.TF_API_TOKEN }}
          terraform login
      - name: Terraform apply
        run: |
          export TF_VAR_source_filepath=${{ needs.upload.outputs.source_path }}
          terraform apply
